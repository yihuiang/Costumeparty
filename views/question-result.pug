doctype html
html
  head
    title Answer Result
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", href="/css/question.css")
  body(class=rolledColor)
    button#view-btn View Character
    h2.username #{username}
    
    .modal#popup-modal(style="display: none;")
      .modal-content
        span.close-btn &times;
        if character
          h2= character.name
          img.popup-img(src=`/img/${character.image}`, alt=character.name)
          p.description= character.description
        else
          p Character not selected.

    .info-panel
      | Score: 
      span#score= score
      |    Count: 
      span#count= count


    .container
      if isCorrect
        h2 + 100 pts
        h2 Correct Answer!
        if rolledColor === 'black'
          p Choose to #[strong eliminate one character] within your room or #[strong PASS]
          .action-buttons
            button#eliminate-btn.submit-btn Eliminate
            button#pass-btn.submit-btn Pass
        else
          p Move one figure into or out of the #{rolledColor} Room.
          button#done-btn.submit-btn Done
      else
        h2 Wrong Answer!
        p You are not allowed to move.
        button#done-btn.submit-btn Done

    audio#correct-sound(src="/sounds/correct.mp3" preload="auto")
    audio#wrong-sound(src="/sounds/wrong.mp3" preload="auto")

    script.
      document.addEventListener("DOMContentLoaded", () => {
        const isCorrect = !#{!isCorrect}; // Pug to JS boolean
        const correctSound = document.getElementById("correct-sound");
        const wrongSound = document.getElementById("wrong-sound");

        // Try playing sound after a slight delay
        setTimeout(() => {
          if (isCorrect) {
            correctSound.play().catch(err => console.log("Correct sound failed:", err));
          } else {
            wrongSound.play().catch(err => console.log("Wrong sound failed:", err));
          }
        }, 300);

        const doneBtn = document.getElementById("done-btn");
        if (doneBtn) {
        doneBtn.addEventListener("click", async () => {
            const response = await fetch("/complete-move", { method: "POST" });
            const data = await response.json();
            if (data.success) {
            window.location.href = "/dice";
            } else {
            alert("Failed to complete move.");
            }
        });
        }


        const passBtn = document.getElementById("pass-btn");
        const eliminateBtn = document.getElementById("eliminate-btn");

        if (passBtn) {
        passBtn.addEventListener("click", async () => {
            const response = await fetch("/complete-move", { method: "POST" });
            const data = await response.json();
            if (data.success) {
                window.location.href = "/dice";
            } else {
                alert("Failed to complete move.");
            }
        });
        }

        if (eliminateBtn) {
        eliminateBtn.addEventListener("click", () => {
            console.log("Eliminate button clicked");
            window.location.href = "/eliminate";
        });
        }

        // Modal functionality
        const viewBtn = document.getElementById("view-btn");
        const modal = document.getElementById("popup-modal");
        const closeBtn = document.querySelector(".close-btn");

        viewBtn.addEventListener("click", () => {
          modal.style.display = "block";
        });

        closeBtn.addEventListener("click", () => {
          modal.style.display = "none";
        });

        window.addEventListener("click", (event) => {
          if (event.target === modal) {
            modal.style.display = "none";
          }
        });
      });
